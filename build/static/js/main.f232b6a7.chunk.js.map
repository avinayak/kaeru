{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","wordsets","toggleexpanded","setPreferenceAndState","expanded","state","switchWordSet","wordsetIndex","length","index","dispIndex","words","dict","filter","x","tags","indexOf","console","log","nextKanji","setPreference","ls","set","objectSpread","get","setState","handleColorChange","color","event","foreground","Math","round","parseInt","rgb","r","g","b","background","hex","prevKanji","keyHandle","keyCode","shuffle","floor","random","handleIndexInput","target","value","replace","preferences","lsPref","isPopoverOpen","document","addEventListener","removeEventListener","_this2","card","kanji","kunyomi","react_default","a","createElement","className","dist_default","style","onKeyDown","handleKeyPress","concat","data-tip","onyomi","keyword","elements","join","dangerouslySetInnerHTML","__html","heisig","commen","onClick","Icon_default","path","mdiBookMultiple","size","mdiShuffle","mdiEye","mdiEyeOff","react_tiny_popover_dist_default","isOpen","onClickOutside","position","content","lib","onChange","mdiEyedropperVariant","contentEditable","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f232b6a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Icon from \"@mdi/react\";\nimport {\n  mdiEye,\n  mdiEyeOff,\n  mdiEyedropperVariant,\n  mdiShuffle,\n  mdiBookMultiple\n} from \"@mdi/js\";\nimport dict from \"./rtk\";\nimport ReactTooltip from \"react-tooltip\";\nimport Popover from \"react-tiny-popover\";\nimport { TwitterPicker } from \"react-color\";\nimport ls from 'local-storage'\n\nclass App extends React.Component {\n  wordsets = [\"N4\", \"N4Words\", \"heisig\",];\n  constructor(props) {\n    super(props);\n    let preferences = {\n      expanded: true,\n      index: 0,\n      dispIndex: 1,\n      background: \"rgb(255, 182, 0)\",\n      wordsetIndex: 0,\n    }\n    let lsPref = ls.get('pref')\n    if(!lsPref){\n      ls.set('pref',preferences)\n    }else{\n      preferences = lsPref\n    }\n    this.state = {\n      ...preferences,\n      isPopoverOpen: false, \n      words: dict.filter(x => x.tags.indexOf(this.wordsets[preferences.wordsetIndex]) != -1)\n    };\n    console.log(\"recons\");\n  }\n\n  toggleexpanded = () => {\n    this.setPreferenceAndState({ expanded: !this.state.expanded });\n  };\n\n  switchWordSet = () => {\n    let wordsetIndex = (this.state.wordsetIndex + 1) % this.wordsets.length;\n    this.setPreferenceAndState({\n      wordsetIndex,\n      index: 0,\n      dispIndex: 1,\n      words: dict.filter(x => x.tags.indexOf(this.wordsets[wordsetIndex]) != -1)\n    });\n    console.log(\"recosns\");\n  };\n\n  nextKanji = () => {\n    let index =\n      this.state.index < this.state.words.length - 1\n        ? this.state.index + 1\n        : this.state.words.length - 1;\n    this.setPreferenceAndState({\n      index,\n      dispIndex: index + 1\n    });\n  };\n\n  setPreference = (state) => {\n    ls.set('pref',{...ls.get('pref'),...state})\n  }\n\n  setPreferenceAndState = (state) => {\n    this.setPreference(state);\n    this.setState(state);\n  }\n\n  handleColorChange = (color, event) => {\n    var o = Math.round(\n      (parseInt(color.rgb.r) * 299 +\n        parseInt(color.rgb.g) * 587 +\n        parseInt(color.rgb.b) * 114) /\n        1000\n    );\n    var foreground = o > 125 ? \"black\" : \"white\";\n    let state = { background: color.hex, foreground }\n    this.setPreferenceAndState(state);\n  };\n\n  prevKanji = () => {\n    let index = this.state.index > 0 ? this.state.index - 1 : 0;\n    this.setPreferenceAndState({ index, dispIndex: index + 1 });\n    // this.setPreference('index',index);\n    // this.setPreference('dispIndex',index + 1 );\n  };\n\n  keyHandle = event => {\n    console.log(event.keyCode);\n    if (event.keyCode == 13) {\n      let dispIndex = parseInt(this.state.dispIndex);\n      if (dispIndex > 0 && dispIndex <= this.state.words.length){\n        this.setPreferenceAndState({ index: dispIndex - 1 });\n      }\n       \n    }\n    if (event.keyCode == 68) {\n      this.nextKanji();\n    }\n    if (event.keyCode == 65) {\n      this.prevKanji();\n    }\n    if (event.keyCode == 69) {\n      this.toggleexpanded();\n    }\n    if (event.keyCode == 83) {\n      this.shuffle();\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyHandle, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyHandle, false);\n  }\n\n  shuffle = () => {\n    this.setPreferenceAndState({\n      index: Math.floor(Math.random() * this.state.words.length)\n    });\n  };\n\n  handleIndexInput = event => {\n    this.setPreferenceAndState({\n      dispIndex: parseInt(event.target.value.replace(/\\D/g, \"\"))\n    });\n  };\n  \n\n  render() {\n    var { isPopoverOpen } = this.state;\n    var card = this.state.words[this.state.index];\n    let kanji = card.kanji ? card.kanji : card.kunyomi;\n    return (\n      <div className=\"App\">\n        <ReactTooltip />\n        <div\n          className=\"background\"\n          style={{ background: this.state.background }}\n          onKeyDown={this.handleKeyPress}\n        />\n        <div className=\"content card\" onKeyDown={this.handleKeyPress}>\n          <div className={`kanji${Math.floor(kanji.length / 6)}`}>{kanji}</div>\n          {this.state.expanded && (\n            <div>\n              <div data-tip=\"onyomi\" className=\"onyomi\">\n                {card.onyomi}\n              </div>\n              <div data-tip=\"kunyomi\" className=\"kunyomi\">\n                {card.kunyomi}\n              </div>\n              <br />\n              <div data-tip=\"meaning\" className=\"keyword\">\n                {card.keyword}\n              </div>\n              {card.elements && card.elements.length > 1 && (\n                <div data-tip=\"component kanjis\" className=\"components\">\n                  {card.elements.join(\", \")}\n                </div>\n              )}\n              <br />\n              <div\n                data-tip=\"heisig mnemonic\"\n                dangerouslySetInnerHTML={{ __html: card.heisig }}\n                className=\"heisig\"\n              />\n              <br />\n              {card.commen && (\n                <div\n                  data-tip=\"heisig's comment\"\n                  dangerouslySetInnerHTML={{ __html: card.commen }}\n                  className=\"notes\"\n                />\n              )}\n            </div>\n          )}\n        </div>\n\n        <div\n          className=\"next-button\"\n          onClick={this.nextKanji}\n        />\n        <div\n          className=\"prev-button\"\n          onClick={this.prevKanji}\n        />\n        <div className=\"toolbar hovercharm\">\n          <Icon\n            color={this.state.foreground}\n            className=\"tool-button\"\n            onClick={this.switchWordSet}\n            data-tip={\"switch wordset\"}\n            path={mdiBookMultiple}\n            size={1}\n          />\n          <Icon\n            color={this.state.foreground}\n            className=\"tool-button\"\n            onClick={this.shuffle}\n            data-tip=\"Shuffle (S)\"\n            path={mdiShuffle}\n            size={1}\n          />\n          <Icon\n            color={this.state.foreground}\n            className=\"tool-button\"\n            onClick={this.toggleexpanded}\n            data-tip=\"Expand card (E)\"\n            path={this.state.expanded ? mdiEye : mdiEyeOff}\n            size={1}\n          />\n          <Popover\n            isOpen={isPopoverOpen}\n            onClickOutside={() => this.setState({ isPopoverOpen: false })}\n            position={\"top\"} // preferred position\n            content={\n              <div>\n                <TwitterPicker\n                  color={this.state.background}\n                  onChange={this.handleColorChange}\n                />\n              </div>\n            }\n          >\n            <Icon\n              color={this.state.foreground}\n              className=\"tool-button\"\n              onClick={() => this.setState({ isPopoverOpen: !isPopoverOpen })}\n            \n              path={mdiEyedropperVariant}\n              size={1}\n            />\n          </Popover>\n        </div>\n        <div\n          style={{ color: this.state.foreground }}\n          className=\"headerbar hovercharm\"\n        >\n          #{\" \"}\n          <input\n            style={{ color: this.state.foreground }}\n            className=\"indexinput\"\n            onChange={this.handleIndexInput}\n            value={this.state.dispIndex + \"\"}\n            contentEditable={true}\n          />\n          /{this.state.words.length} {this.wordsets[this.state.wordsetIndex]}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}