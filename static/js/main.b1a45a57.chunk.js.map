{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","wordsets","toggleexpanded","setPreferenceAndState","expanded","state","toggleCard","cardMode","speak","window","card","words","index","kanji","kunyomi","console","log","speech","SpeechSynthesisUtterance","lang","speechSynthesis","switchWordSet","wordsetIndex","length","setState","dict","filter","x","tags","indexOf","dispIndex","nextKanji","setPreference","ls","set","objectSpread","get","handleColorChange","color","event","foreground","Math","round","parseInt","rgb","r","g","b","background","hex","prevKanji","keyHandle","keyCode","shuffle","floor","random","handleIndexInput","target","value","replace","preferences","lsPref","isPopoverOpen","document","addEventListener","removeEventListener","_this2","react_default","a","createElement","className","dist_default","style","onKeyDown","handleKeyPress","concat","data-tip","onyomi","keyword","elements","join","dangerouslySetInnerHTML","__html","heisig","commen","onClick","Icon_default","path","mdiBookOutline","size","mdiShuffle","mdiEyeOutline","mdiEyeOffOutline","mdiCardTextOutline","mdiCardBulletedOffOutline","mdiMicrophoneOutline","react_tiny_popover_dist_default","isOpen","onClickOutside","position","content","lib","onChange","mdiEyedropperVariant","contentEditable","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1a45a57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Icon from \"@mdi/react\";\r\nimport {\r\n  mdiEyeOutline,\r\n  mdiEyeOffOutline,\r\n  mdiEyedropperVariant,\r\n  mdiShuffle,\r\n  mdiBookOutline,\r\n  mdiMicrophoneOutline,\r\n  mdiCardBulletedOffOutline,\r\n  mdiCardTextOutline\r\n} from \"@mdi/js\";\r\nimport dict from \"./rtk\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Popover from \"react-tiny-popover\";\r\nimport { TwitterPicker } from \"react-color\";\r\nimport ls from 'local-storage'\r\n\r\nclass App extends React.Component {\r\n  wordsets = [\"N4\", \"N4Words\", \"heisig\",\"katakana\"];\r\n  constructor(props) {\r\n    super(props);\r\n    let preferences = {\r\n      cardMode:true,\r\n      expanded: true,\r\n      index: 0,\r\n      dispIndex: 1,\r\n      background: \"rgb(255, 182, 0)\",\r\n      wordsetIndex: 0,\r\n    }\r\n    let lsPref = ls.get('pref')\r\n    if(!lsPref){\r\n      ls.set('pref',preferences)\r\n    }else{\r\n      preferences = lsPref\r\n    }\r\n    this.state = {\r\n      ...preferences,\r\n      isPopoverOpen: false, \r\n      words: dict.filter(x => x.tags.indexOf(this.wordsets[preferences.wordsetIndex]) != -1)\r\n    };\r\n  }\r\n\r\n  toggleexpanded = () => {\r\n    this.setPreferenceAndState({ expanded: !this.state.expanded });\r\n  };\r\n\r\n  toggleCard = () => {\r\n    this.setPreferenceAndState({ cardMode: !this.state.cardMode });\r\n  }\r\n\r\n  speak = () => {\r\n    if('speechSynthesis' in window){\r\n      var card = this.state.words[this.state.index];\r\n      let kanji = card.kanji ? card.kanji : card.kunyomi;\r\n      console.log(kanji)\r\n      var speech = new SpeechSynthesisUtterance(kanji);\r\n      speech.lang = 'ja-JP';\r\n      window.speechSynthesis.speak(speech);\r\n    }\r\n  }\r\n\r\n  switchWordSet = () => {\r\n    let wordsetIndex = (this.state.wordsetIndex + 1) % this.wordsets.length;\r\n    this.setState({words: dict.filter(x => x.tags.indexOf(this.wordsets[wordsetIndex]) != -1)})\r\n    this.setPreferenceAndState({\r\n      wordsetIndex,\r\n      index: 0,\r\n      dispIndex: 1,\r\n    });\r\n  };\r\n\r\n  nextKanji = () => {\r\n    let index =\r\n      this.state.index < this.state.words.length - 1\r\n        ? this.state.index + 1\r\n        : this.state.words.length - 1;\r\n    this.setPreferenceAndState({\r\n      index,\r\n      dispIndex: index + 1\r\n    });\r\n  };\r\n\r\n  setPreference = (state) => {\r\n    ls.set('pref',{...ls.get('pref'),...state})\r\n  }\r\n\r\n  setPreferenceAndState = (state) => {\r\n    this.setPreference(state);\r\n    this.setState(state);\r\n  }\r\n\r\n  handleColorChange = (color, event) => {\r\n    var o = Math.round(\r\n      (parseInt(color.rgb.r) * 299 +\r\n        parseInt(color.rgb.g) * 587 +\r\n        parseInt(color.rgb.b) * 114) /\r\n        1000\r\n    );\r\n    var foreground = o > 125 ? \"black\" : \"white\";\r\n    let state = { background: color.hex, foreground }\r\n    this.setPreferenceAndState(state);\r\n  };\r\n\r\n  prevKanji = () => {\r\n    let index = this.state.index > 0 ? this.state.index - 1 : 0;\r\n    this.setPreferenceAndState({ index, dispIndex: index + 1 });\r\n    // this.setPreference('index',index);\r\n    // this.setPreference('dispIndex',index + 1 );\r\n  };\r\n\r\n  keyHandle = event => {\r\n    console.log(event.keyCode);\r\n    if (event.keyCode == 13) {\r\n      let dispIndex = parseInt(this.state.dispIndex);\r\n      if (dispIndex > 0 && dispIndex <= this.state.words.length){\r\n        this.setPreferenceAndState({ index: dispIndex - 1 });\r\n      }\r\n       \r\n    }\r\n    if (event.keyCode == 68) {\r\n      this.nextKanji();\r\n    }\r\n    if (event.keyCode == 65) {\r\n      this.prevKanji();\r\n    }\r\n    if (event.keyCode == 69) {\r\n      this.toggleexpanded();\r\n    }\r\n    if (event.keyCode == 83) {\r\n      this.shuffle();\r\n    }\r\n    if (event.keyCode == 90) {\r\n      this.speak();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keyHandle, false);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.keyHandle, false);\r\n  }\r\n\r\n  shuffle = () => {\r\n    this.setPreferenceAndState({\r\n      index: Math.floor(Math.random() * this.state.words.length)\r\n    });\r\n  };\r\n\r\n  handleIndexInput = event => {\r\n    this.setPreferenceAndState({\r\n      dispIndex: parseInt(event.target.value.replace(/\\D/g, \"\"))\r\n    });\r\n  };\r\n  \r\n\r\n  render() {\r\n    var { isPopoverOpen } = this.state;\r\n    var card = this.state.words[this.state.index];\r\n    let kanji = card.kanji ? card.kanji : card.kunyomi;\r\n    return (\r\n      <div className=\"App\">\r\n        <ReactTooltip />\r\n        <div\r\n          className=\"background\"\r\n          style={{ background: this.state.background }}\r\n          onKeyDown={this.handleKeyPress}\r\n        />\r\n        <div className={`content ${this.state.cardMode && \"card\"}`} \r\n              style={{color:this.state.cardMode?\"#111\":this.state.foreground}}\r\n              onKeyDown={this.handleKeyPress}>\r\n          <div className={`kanji${Math.floor(kanji.length / 6)}`}>{kanji}</div>\r\n          {this.state.expanded && (\r\n            <div>\r\n              <div data-tip=\"onyomi\" className=\"onyomi\">\r\n                {card.onyomi}\r\n              </div>\r\n              <div data-tip=\"kunyomi\" className=\"kunyomi\">\r\n                {card.kunyomi}\r\n              </div>\r\n              <br />\r\n              <div data-tip=\"meaning\" className=\"keyword\">\r\n                {card.keyword}\r\n              </div>\r\n              {card.elements && card.elements.length > 1 && (\r\n                <div data-tip=\"component kanjis\" className=\"components\">\r\n                  {card.elements.join(\", \")}\r\n                </div>\r\n              )}\r\n              <br />\r\n              <div\r\n                data-tip=\"heisig mnemonic\"\r\n                dangerouslySetInnerHTML={{ __html: card.heisig }}\r\n                className=\"heisig\"\r\n              />\r\n              <br />\r\n              {card.commen && (\r\n                <div\r\n                  data-tip=\"heisig's comment\"\r\n                  dangerouslySetInnerHTML={{ __html: card.commen }}\r\n                  className=\"notes\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className=\"next-button\"\r\n          onClick={this.nextKanji}\r\n        />\r\n        <div\r\n          className=\"prev-button\"\r\n          onClick={this.prevKanji}\r\n        />\r\n        <div className=\"toolbar hovercharm\">\r\n          <Icon\r\n            color={this.state.foreground}\r\n            className=\"tool-button\"\r\n            onClick={this.switchWordSet}\r\n            data-tip={\"switch wordset\"}\r\n            path={mdiBookOutline}\r\n            size={1}\r\n          />\r\n          <Icon\r\n            color={this.state.foreground}\r\n            className=\"tool-button\"\r\n            onClick={this.shuffle}\r\n            data-tip=\"Shuffle (S)\"\r\n            path={mdiShuffle}\r\n            size={1}\r\n          />\r\n          <Icon\r\n            color={this.state.foreground}\r\n            className=\"tool-button\"\r\n            onClick={this.toggleexpanded}\r\n            data-tip=\"Expand card (E)\"\r\n            path={this.state.expanded ? mdiEyeOutline : mdiEyeOffOutline}\r\n            size={1}\r\n          />\r\n          <Icon\r\n            color={this.state.foreground}\r\n            className=\"tool-button\"\r\n            onClick={this.toggleCard}\r\n            data-tip=\"Toggle Card UI\"\r\n            path={this.state.cardMode ? mdiCardTextOutline : mdiCardBulletedOffOutline}\r\n            size={1}\r\n          />\r\n          <Icon\r\n            color={this.state.foreground}\r\n            className=\"tool-button\"\r\n            onClick={this.speak}\r\n            data-tip=\"Speak (Z)\"\r\n            path={mdiMicrophoneOutline}\r\n            size={1}\r\n          />\r\n          <Popover\r\n            isOpen={isPopoverOpen}\r\n            onClickOutside={() => this.setState({ isPopoverOpen: false })}\r\n            position={\"top\"} // preferred position\r\n            content={\r\n              <div>\r\n                <TwitterPicker\r\n                  color={this.state.background}\r\n                  onChange={this.handleColorChange}\r\n                />\r\n              </div>\r\n            }\r\n          >\r\n            <Icon\r\n              color={this.state.foreground}\r\n              className=\"tool-button\"\r\n              onClick={() => this.setState({ isPopoverOpen: !isPopoverOpen })}\r\n            \r\n              path={mdiEyedropperVariant}\r\n              size={1}\r\n            />\r\n          </Popover>\r\n        </div>\r\n        <div\r\n          style={{ color: this.state.foreground }}\r\n          className=\"headerbar hovercharm\"\r\n        >\r\n          #{\" \"}\r\n          <input\r\n            style={{ color: this.state.foreground }}\r\n            className=\"indexinput\"\r\n            onChange={this.handleIndexInput}\r\n            value={this.state.dispIndex + \"\"}\r\n            contentEditable={true}\r\n          />\r\n          /{this.state.words.length} {this.wordsets[this.state.wordsetIndex]}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}